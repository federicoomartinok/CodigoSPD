#include<LiquidCrystal.h>

#define BTN_RIGHT 0
#define BTN_UP 1
#define BTN_DOWN 2
#define BTN_LEFT 3
#define BTN_SELECT 4 
#define BTN_NONE 5

//lo definimos asi por que lo vamos a 
//manejar con estados que serian los 6 estados 
//posibles de la botonera

//devuelve que boton se esta apretando o si
//ninguno se esta apretando

int readButton(){
 
  int value = analogRead(A0);
  if(value <72)
    return BTN_RIGHT;
  if(value <237)
    return BTN_UP;
  if(value <419)
    return BTN_DOWN;
  if(value <625)
    return BTN_LEFT;
  if(value <882)
    return BTN_SELECT;
  
    return BTN_NONE; 
}

LiquidCrystal lcd(4,5,6,7,8,9);
void setup()
{
  Serial.begin(9600);
  lcd.begin(16,2);
  lcd.print("00:00");
  lcd.setCursor(0,1);
  lcd.print("^");

}
int botonPrevio= BTN_NONE;
int pos=0;
void loop()
{
  int button = readButton();
  if (botonPrevio == BTN_NONE && button != BTN_NONE){
 
    switch(button){
    case BTN_RIGHT: 
   
    lcd.setCursor(pos,1);
    lcd.print(" ");
      if(pos == 1){
        pos=+2;}
      if (pos ==4){
        pos=0;}
      else{
        pos++;}
    lcd.setCursor(pos,1);
    lcd.print("^");
    break;
    
    case BTN_UP: 
    //lcd.print("UP       ");
    break;
    
	case BTN_DOWN: 
    //lcd.print("DOWN     ");
    break;	
    
    case BTN_LEFT: 
  
	lcd.setCursor(pos,1);
    lcd.print(" ");
    if(pos == 2)
      pos-2;
    if (pos ==4)
      pos=0;
    else
      pos--;
    lcd.setCursor(pos,1);
    lcd.print("^");
    
    break;
    
    case BTN_SELECT: 
    //lcd.print("SELECT   ");
    break;
   // default:
	//lcd.print("NONE     ");
  
	}
 }
  botonPrevio=button;
}